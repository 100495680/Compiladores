(setq a 0)
(setq b 10)
(setq c 0)
(defun main ()
	(if (or (or (= a 0) (= b 0)) (= c 0))
	(progn	(print "|| ||")))
	(if (or (and (= a 0) (= b 0)) (= c 1))
	(progn	(print "&& ||")))
	(if (and (and (= a 0) (= b 0)) (= c 0))
	(progn	(print "&& &&")))
	(if (or (= a 0) (and (= b 0) (= c 1)))
	(progn	(print "|| &&")))
	(if (or (= a 0) (= b 0))
	(progn	(print "||")))
	(if (and (= a 0) (= b 0))
	(progn	(print "&&")))
	(if (/= a 0)
	(progn	(print "!=")))
	(if (= a 0)
	(progn	(print "==")))
	(if (> a 0)
	(progn	(print ">")))
	(if (< a 0)
	(progn	(print "<")))
	(if (>= a 0)
	(progn	(print ">=")))
	(if (<= a 0)
	(progn	(print "<=")))
	(setf a (+ b c))
	(print "Operacion a = b + c")
	(print "Valor de a:")
	(princ a)
	
	(setf a (- b c))
	(print "Operacion a = b - c")
	(print "Valor de a:")
	(princ a)
	
	(setf a (* b c))
	(print "Operacion a = b * c")
	(print "Valor de a:")
	(princ a)
	
	(setf a (/ b 3))
	(print "Operacion a = b / 3")
	(print "Valor de a:")
	(princ a)
	
	(setf a (mod b 10))
	(print "Operacion a = b % 10")
	(print "Valor de a:")
	(princ a)
	
	(setf a (not b))
	(print "Operacion a = !b")
	(print "Valor de a:")
	(princ a)
	
	(setf a 29)
	(print "Operacion a = +29")
	(print "Valor de a:")
	(princ a)
	
	(setf a (- 1))
	(print "Operacion a = -1")
	(print "Valor de a:")
	(princ a)
	
	(loop while (< a 5) do
	(progn	(print "while")
	(progn	(setf a (+ a 1)))))
	(if (mod a 2)
	(progn	(print "PAR"))
	(progn	(print "IMPAR")))
)
 (main)
